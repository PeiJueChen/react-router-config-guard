{"version":3,"file":"react-router-config-guard.min.js","sources":["../../node_modules/@babel/runtime/helpers/esm/extends.js","../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../src/Contexts.jsx","../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/RouterGuard.jsx","../src/hooks/usePrevious.jsx","../src/ContextProvider.jsx","../src/ReactRouterConfigGuard.jsx"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createContext } from \"react\";\nexport const FromRouteContext = createContext(null);","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { useState, useContext } from \"react\";\nimport { memo, useCallback, useEffect } from \"react\"\nimport { __RouterContext as RouterContext } from 'react-router';\nimport { FromRouteContext } from './Contexts.jsx';\n\n\n// const from = createContext(FromRouteContext);\n// const to = createContext(RouterContext);\n// class RouterGuard2 extends React.PureComponent {\n\n//     hasRouteGuard\n//     guardToRedirect = false;\n//     isRedirect = false;\n//     redirectPath = \"\";\n//     constructor(props) {\n//         super(props);\n//         this.hasRouteGuard = !!this.props.routerBeforeEach;\n//         this.state = {\n//             routeGuardFinished: false,\n//         }\n//     }\n\n//     getTo() {\n//         return { ...to, meta: this.props.route.meta || {}, route: this.props.route }\n//     }\n\n//     componentDidMount() {\n//         if (!this.hasRouteGuard) {\n//             return;\n//         }\n\n//         this.props.routerBeforeEach(this.getTo(), from, (to) => {\n//             if (!to) {\n//                 this.guardToRedirect = false;\n//                 this.setState({\n//                     routeGuardFinished: true\n//                 })\n//             } else {\n//                 if (typeof to === 'string') {\n//                     this.redirectPath = to;\n//                     this.isRedirect = false;\n//                     this.guardToRedirect = true;\n//                     this.setState({\n//                         routeGuardFinished: true\n//                     })\n//                 } else if (typeof to === 'object' && (typeof to.path === 'string' || typeof to.name === 'string')) {\n//                     this.redirectPath = to.path || to.name;\n//                     this.isRedirect = to.replace || false;\n//                     this.guardToRedirect = false;\n//                     this.setState({\n//                         routeGuardFinished: true\n//                     })\n//                 } else {\n//                     console.log(`Your next format is incorrect, should be : next('/') or next({ path: '/' }) or next({ path: '/', replace: true})`);\n//                     this.guardToRedirect = false;\n//                     this.setState({\n//                         routeGuardFinished: true\n//                     })\n//                 }\n//             }\n//         })\n\n//     }\n\n//     render() {\n\n//         var { routerAfterEach, route, history } = this.props\n\n//         if (!this.state.routeGuardFinished) {\n//             return null;\n//         }\n\n//         if (this.guardToRedirect && this.redirectPath) {\n//             routerAfterEach && routerAfterEach(this.getTo());\n//             if (this.isRedirect) {\n//                 return <Redirect to={this.redirectPath} {...this.props} />\n//             } else {\n//                 if (history) {\n//                     history.push(this.redirectPath);\n//                     return null;\n//                 } else {\n//                     return <Route to={this.redirectPath} {...this.props} />\n//                 }\n//             }\n//         }\n\n//         routerAfterEach && routerAfterEach(this.getTo());\n//         return React.createElement(route.component, this.props);\n//     }\n// }\n\n\nconst RouterGuard = memo(function (props) {\n    // console.log(\"init RouterGuard\");\n\n    var { routerBeforeEach, routerAfterEach, route, history } = props\n    const from = useContext(FromRouteContext);\n    const to = useContext(RouterContext);\n\n    const getTo = useCallback(() => {\n        return { ...to, meta: route.meta || {}, route }\n    }, [to, route])\n    // const hasRouteGuard = !!routerBeforeEach;\n    const [routeGuardFinished, setRouteGuardFinished] = useState(false);\n    const [redirectPath, setRedirectPath] = useState(\"\");\n    const [guardToRedirect, setGuardToRedirect] = useState(false);\n    const [isRedirect, setIsRedirect] = useState(false);\n\n    const hook = useCallback((to, from, next) => {\n        routerBeforeEach && routerBeforeEach(to, from, next);\n    }, [routerBeforeEach])\n\n    useEffect(() => {\n\n        if (!routerBeforeEach) {\n            setRouteGuardFinished(true);\n            setGuardToRedirect(false);\n        } else {\n            hook(getTo(), from, (to) => {\n                if (!to) {\n                    setGuardToRedirect(false);\n                    setRouteGuardFinished(true);\n                } else {\n                    // next('/') or next({ path: '/' }) -> redirect\n                    if (typeof to === 'string') {\n                        setRedirectPath(to);\n                        setIsRedirect(false);\n                        setGuardToRedirect(true);\n                        setRouteGuardFinished(true);\n                    } else if (typeof to === 'object' && (typeof to.path === 'string' || typeof to.name === 'string')) {\n                        setRedirectPath(to.path || to.name);\n                        setIsRedirect(to.replace || false);\n                        setGuardToRedirect(true);\n                        setRouteGuardFinished(true);\n                    } else {\n                        console.log(`Your next format is incorrect, should be : next('/') or next({ path: '/' }) or next({ path: '/', replace: true})`);\n                        setGuardToRedirect(false);\n                        setRouteGuardFinished(true);\n                    }\n                }\n\n            })\n        }\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [hook])\n\n    if (!routeGuardFinished) {\n        return null;\n    }\n\n    if (guardToRedirect && redirectPath) {\n        routerAfterEach && routerAfterEach(getTo());\n        if (isRedirect) {\n            return <Redirect to={redirectPath} {...props} />\n        } else {\n            if (history) {\n                history.push(redirectPath);\n                return null;\n            } else {\n                return <Route to={redirectPath} {...props} />\n            }\n        }\n    }\n\n    routerAfterEach && routerAfterEach(getTo());\n\n    return React.createElement(route.component, props);\n})\n\nexport default RouterGuard;","import { useDebugValue, useEffect, useRef } from 'react';\n\n/**\n * React hook for storing the previous value of the\n * given value.\n *\n * @param value the value to store\n * @returns the previous value\n */\nfunction usePrevious(value) {\n    const ref = useRef(value);\n\n    useEffect(() => {\n        ref.current = value;\n    });\n\n    // Can be used to display custom hook tags in React developer tools. \n    // useDebugValue(ref.current);\n\n    return ref.current;\n}\n\nexport default usePrevious;\n","import React from \"react\";\nimport { memo, useContext } from 'react';\nimport { __RouterContext as RouterContext } from 'react-router';\nimport usePrevious from './hooks/usePrevious.jsx';\nimport { FromRouteContext } from './Contexts.jsx';\nconst ContextProvider = memo(function ({ childrens }) {\n    const routerContext = useContext(RouterContext);\n    const from = usePrevious(routerContext);\n    return <FromRouteContext.Provider value={from}>{childrens}</FromRouteContext.Provider>\n\n})\n\nexport default ContextProvider;","\nimport React from \"react\";\nimport { Switch } from \"react-router\";\nimport RouterGuard from './RouterGuard.jsx';\nimport ContextProvider from './ContextProvider.jsx';\n\nconst reactRouter = require('react-router');\n\nvar _extends = function () {\n    _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n\n        return target;\n    };\n\n    return _extends.apply(this, arguments);\n}\n\n\n\nvar routerBeforeEach;\n\nvar routerAfterEach;\n\nexport const setRouterEach = (before, after) => {\n    routerBeforeEach = before;\n    routerAfterEach = after;\n}\n\n// renderRoutes(routes, extraProps = {}, switchProps = {})\nexport function renderRoutes(routes, extraProps = {}, switchProps = {}) {\n\n    if (extraProps === void 0) {\n        extraProps = {};\n    }\n\n    if (switchProps === void 0) {\n        switchProps = {};\n    }\n\n    if (!routes) return null;\n\n\n    return (\n        <ContextProvider childrens={\n            <Switch switchProps={switchProps} extraProps={extraProps}>\n                {\n\n                    routes.map((route, i) => {\n                        const genParams = (props) => (_extends({}, props, {}, extraProps, {\n                            route: route\n                        }));\n                        const render_ = (props) => {\n                            let params = genParams(props);\n                            return route.render ?\n                                route.render(params) :\n                                <RouterGuard routerBeforeEach={routerBeforeEach} routerAfterEach={routerAfterEach} {...params} />\n                        }\n                        return React.createElement(reactRouter.Route, {\n                            key: route.key || i,\n                            path: route.path,\n                            exact: route.exact,\n                            strict: route.strict,\n                            render: render_\n                        })\n                    })\n                }\n\n            </Switch>\n        }>\n\n        </ContextProvider>\n\n    )\n}\n\nexport function matchRoutes(routes, pathname,\n    /*not public API*/\n    branch) {\n    if (branch === void 0) {\n        branch = [];\n    }\n\n    routes.some(function (route) {\n        var match = route.path ? reactRouter.matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n            : reactRouter.Router.computeRootMatch(pathname); // use default \"root\" match\n\n        if (match) {\n            branch.push({\n                route: route,\n                match: match\n            });\n\n            if (route.routes) {\n                matchRoutes(route.routes, pathname, branch);\n            }\n        }\n\n        return match;\n    });\n    return branch;\n}\n\n"],"names":["_extends","Object","assign","target","i","arguments","length","key","source","prototype","hasOwnProperty","call","apply","this","_typeof","obj","Symbol","iterator","constructor","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","iterableToArrayLimit","o","minLen","arrayLikeToArray","n","toString","slice","name","from","test","unsupportedIterableToArray","TypeError","nonIterableRest","FromRouteContext","createContext","defineProperty","enumerable","configurable","writable","RouterGuard","memo","props","routerBeforeEach","routerAfterEach","route","history","useContext","to","RouterContext","getTo","useCallback","meta","useState","routeGuardFinished","setRouteGuardFinished","redirectPath","setRedirectPath","guardToRedirect","setGuardToRedirect","isRedirect","setIsRedirect","hook","useEffect","path","console","log","replace","React","Redirect","Route","createElement","component","usePrevious","ref","useRef","current","ContextProvider","childrens","Provider","reactRouter","require","matchRoutes","routes","pathname","branch","some","match","matchPath","Router","computeRootMatch","extraProps","switchProps","Switch","map","exact","strict","render","params","before","after"],"mappings":"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"}